name: CI

on:
  push:
  pull_request:

jobs:
  quality:
    name: Lint and test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    env:
      VENV_PATH: .venv
      QT_QPA_PLATFORM: offscreen
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore virtualenv cache
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: ${{ env.VENV_PATH }}
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements.txt', 'requirements-dev.txt', 'pyproject.toml', 'setup.cfg') }}

      - name: Create virtual environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: python -m venv $VENV_PATH

      - name: Install dependencies
        run: |
          $VENV_PATH/bin/python -m pip install --upgrade pip
          $VENV_PATH/bin/pip install -r requirements.txt
          $VENV_PATH/bin/pip install -r requirements-dev.txt

      - name: Check formatting with Black
        run: ${{ env.VENV_PATH }}/bin/black --check .

      - name: Lint with Flake8
        run: ${{ env.VENV_PATH }}/bin/flake8 .

      - name: Type-check with mypy
        run: ${{ env.VENV_PATH }}/bin/mypy .

      - name: Run tests
        run: ${{ env.VENV_PATH }}/bin/pytest --maxfail=1 --disable-warnings
